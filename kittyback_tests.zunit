#!/usr/bin/env zunit

before_each() {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/test_buffer.png"
  export TEST_FINAL="$HOME/.config/kitty/background.png"

  magick -size 100x100 xc:white "$TEST_IMG"
  magick -size 100x100 xc:white "$TEST_BUFFER"
  magick -size 100x100 xc:white "$TEST_FINAL"

  export TEST_BUFFER="$TEST_BUFFER"
  export TEST_FINAL="$TEST_FINAL"
}

@test 'load_image should copy input image to buffer' {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/.kittyback_imgs/buffer.png"
  export TEST_FINAL="$HOME/.config/kitty/background.png"

  magick -size 100x100 xc:white "$TEST_IMG"

  load_image "$TEST_IMG"
  assert "$TEST_BUFFER" exists
  rm -f "$TEST_IMG" "$TEST_BUFFER" "$TEST_FINAL"
}

@test 'darken should apply darkness to image' {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/.kittyback_imgs/buffer.png"
  export TEST_FINAL="$HOME/.config/kitty/background.png"

  magick -size 100x100 xc:white "$TEST_IMG"

  load_image "$TEST_IMG"
  darken 50
  assert "$TEST_BUFFER" exists
  rm -f "$TEST_IMG" "$TEST_BUFFER" "$TEST_FINAL"
}

@test 'discolor should apply color overlay' {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/.kittyback_imgs/buffer.png"
  export TEST_FINAL="$HOME/.config/kitty/background.png"

  magick -size 100x100 xc:white "$TEST_IMG"

  load_image "$TEST_IMG"
  discolor "#ff0000"
  assert "$TEST_BUFFER" exists
  rm -f "$TEST_IMG" "$TEST_BUFFER" "$TEST_FINAL"
}

@test 'pixilize should resize the image' {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/.kittyback_imgs/buffer.png"
  export TEST_FINAL="$HOME/.config/kitty/background.png"

  magick -size 100x100 xc:white "$TEST_IMG"

  load_image "$TEST_IMG"
  pixilize 50
  assert "$TEST_BUFFER" exists
  rm -f "$TEST_IMG" "$TEST_BUFFER" "$TEST_FINAL"
}

@test 'check_kitty_socket should detect socket' {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/.kittyback_imgs/buffer.png"
  export TEST_FINAL="$HOME/.config/kitty/background.png"

  magick -size 100x100 xc:white "$TEST_IMG"

  check_kitty_socket
  pass
  rm -f "$TEST_IMG" "$TEST_BUFFER" "$TEST_FINAL"
}

@test 'kittyback should fail without an image argument' {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/.kittyback_imgs/buffer.png"
  export TEST_FINAL="$HOME/.config/kitty/background.png"

  magick -size 100x100 xc:white "$TEST_IMG"

  run kittyback
  if [[ $? -ne 0 ]]; then
    fail
  else
    pass
  fi  
  rm -f "$TEST_IMG" "$TEST_BUFFER" "$TEST_FINAL"
}

@test 'kittyback should create output files' {
  load "$HOME/div_of_projects/custom_bash_scripts/kittyback/kittyback.plugin.zsh" || return 1
  export TEST_IMG="/tmp/test_image.png"
  export TEST_BUFFER="/tmp/.kittyback_imgs/buffer.png"
  export TEST_FINAL="/tmp/.kittyback_imgs/final.png"

  magick -size 100x100 xc:white "$TEST_IMG"

  kittyback "$TEST_IMG"
  assert "$TEST_FINAL" exists
  rm -f "$TEST_IMG" "$TEST_BUFFER" "$TEST_FINAL"
}

